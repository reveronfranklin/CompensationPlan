@page "/indice-periodo"
@inject HttpClient Http
@using Compensation.Client.Data
@inject PeriodoService periodoService
@inject IJSRuntime JS


<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" />
<br />
<div>
    <a class="btn btn-success oi oi-plus" href="crear-periodo"> Nuevo</a>
</div>
<br />

@if (periodo == null)
{
    <tesxt>  Cargando.....</tesxt>
}
else if (periodo.Length == 0)
{
    <tesxt>  No existen datos de Periodo.....</tesxt>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Mantenimiento de Periodo</h3>
                </div>
                <div class="panel-body">
                    <table class="display" style="width:100%" id="example">

                        <thead class="thead-dark">
                            <tr>
                                <th></th>
                                <th>Id</th>
                                <th>Desde</th>
                                <th>Hasta</th>
                                <th>Activo</th>
                                <th>Descripcion</th>



                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in periodo)
                            {
                                <tr>
                                    <td>
                                        <a class="btn btn-success oi oi-pencil" href="editar-periodo/@item.ID"></a>
                                        <button class="btn btn-danger oi oi-trash" @onclick="@(() => Borrar(item.ID))"></button>
                                    </td>

                                    <td>@item.ID</td>
                                    <td>@item.Desde</td>
                                    <td>@item.Hasta</td>
                                    <td>@item.Activo</td>
                                    <td>@item.DescPeriodo</td>



                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}



@code {


    WSMY686[] periodoView { get; set; }
    WSMY686[] periodo { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetData();
    }

    async Task GetData()
    {
        periodoView = await periodoService.getPeriodoAsync();
        periodo = periodoView.OrderByDescending(p => p.Hasta).ToArray();
        await JS.InvokeAsync<object>("TestDataTablesAdd", "#example");
    }
    async Task Borrar(int Id)
    {

        var selecionado = periodo.First(f => f.ID == Id);
        string Mensaje = $"deseas borrar este Periodo: {selecionado.DescPeriodo}?";
        if (await JS.Confirm("Confirmar", Mensaje, Compensation.Client.Helpers.IJSExtensions.TipoMensajeSweetAlert.question))
        {


            await periodoService.DeletePeriodoAsync(Id);

            await GetData();
        }




    }
}

